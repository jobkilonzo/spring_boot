package com.example.Front;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.text.SimpleDateFormat;
import java.util.Date;

@CrossOrigin
@Controller // This means that this class is a Controller
@RequestMapping(path="/film") // This means URL's start with /film (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ActorRepository actorRepository;
    @Autowired
    private FilmRepository filmRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody
    String addNewActor (@RequestParam String first_name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
        Actor n = new Actor();
        n.setFirst_name(first_name);
        n.setLast_name(email);
        n.setLast_update(timeStamp);


        actorRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/allActors")
    public @ResponseBody Iterable<Actor> getAllActors() {
        // This returns a JSON or XML with the users
        return actorRepository.findAll();
    }
    @GetMapping(path="/allFilms")
    public @ResponseBody Iterable<Film> getAllFilms() {
        // This returns a JSON or XML with the users
        return filmRepository.findAll();
    }

    @DeleteMapping("/allActors/{id}")
    void deleteEmployee(@PathVariable int id) {
        filmRepository.deleteById(id);
    }
}